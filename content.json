{"meta":{"title":"秀才遇到猫","subtitle":"人生几何对酒当歌","description":"明月装饰了你的窗子,你装饰了别人的梦","author":"smirkcat","url":"https://smirkcat.github.io"},"pages":[{"title":"","date":"2017-03-20T09:52:54.879Z","updated":"2017-03-20T09:52:54.879Z","comments":true,"path":"google6eb3e8579a6aa421.html","permalink":"https://smirkcat.github.io/google6eb3e8579a6aa421.html","excerpt":"","text":"google-site-verification: google6eb3e8579a6aa421.html","raw":null,"content":null},{"title":"","date":"2017-03-20T07:30:44.798Z","updated":"2017-03-20T07:30:44.798Z","comments":true,"path":"404.html","permalink":"https://smirkcat.github.io/404.html","excerpt":"","text":"","raw":null,"content":null},{"title":"分类","date":"2017-03-20T07:01:03.000Z","updated":"2017-03-20T07:51:01.939Z","comments":true,"path":"categories/index.html","permalink":"https://smirkcat.github.io/categories/index.html","excerpt":"","text":"","raw":null,"content":null},{"title":"平凡的一生","date":"2017-03-20T08:52:29.000Z","updated":"2017-03-20T09:02:07.592Z","comments":true,"path":"about/index.html","permalink":"https://smirkcat.github.io/about/index.html","excerpt":"","text":"95.xx-11.09 应试教育 (出生年月 身份证为准) 11.09-15.07 中国石油大学(华东) 数学与应用数学 15.07-16.08 浪潮软件 16.08-now 北京一家安全创业公司","raw":null,"content":null},{"title":"标签","date":"2017-03-20T07:00:16.000Z","updated":"2017-03-20T07:51:31.731Z","comments":true,"path":"tags/index.html","permalink":"https://smirkcat.github.io/tags/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"elasticsearch-centos7安装教程","slug":"elasticsearch-install","date":"2017-03-21T01:44:02.000Z","updated":"2017-04-01T04:21:18.989Z","comments":true,"path":"2017/03/21/elasticsearch-install/","link":"","permalink":"https://smirkcat.github.io/2017/03/21/elasticsearch-install/","excerpt":"","text":"目录 虚拟机准备，vmware12 centos7 jdk 安装centos7minial 配置静态ip jdk环境准备 elastic和kibana下载安装 elastic配置端口，启动服务，开始守护进程 kibana配置端口，启动服务，开始守护进程 设置通过防火墙，外部访问 集群部署，虚拟机克隆 启动集群，访问测试 虚拟机环境准备 我是在wiodow下测试，所以使用vmware12，网络方式设置nat8模式，也可使用自带的hyper-v具体下载安装我这里不再叙述，需要详细安装步骤，请移步百度或谷歌。 配置静态ip，在安装centos默认是动态ip获取，为了防止开机ip变化，可以把动态获取地址设置为静态，如果不需要设置静态ip跳过这步。 使用nmcli命令 修改命令时 nmcli con mod 连接名 属性 值 12345678910111213141516171819202122232425262728293031$ nmcli con show #查看所有连接NAME UUID TYPE DEVICE eth1 548a96d0-4d0c-49ad-a3bc-39895da00beb 802-3-ethernet ens33 ens33 a5fff2dd-742f-4a34-aee1-4dc35cbcac1e 802-3-ethernet -- $ nmcli con show eth1 # 查看对应连接... 找到下面这列是否是manual 如果是auto 需要设置为manualipv4.method: manualipv4.dns: 192.168.195.2 # 没有请以后面对应IP4.DNS[1]，多个 请加引号，并以空格分割ipv4.addresses: 192.168.195.157/24 # 没有请以后面对应IP4.ADDRESS[1] 多个 请加引号，并以空格分割ipv4.gateway: 192.168.195.2 # 没有请以后面对应IP4.GATEWAY....IP4.ADDRESS[1]: 192.168.195.157/24IP4.GATEWAY: 192.168.195.2IP4.DNS[1]: 192.168.195.2...$ nmcli con mod eth1 ipv4.method manual # 修改一系列命令...$ nmcli con up eth1 # 重新激活$ ip addr # 查看ip 是都配置完成1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft foreverinet6 ::1/128 scope host valid_lft forever preferred_lft forever2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000link/ether 00:0c:29:de:1b:fe brd ff:ff:ff:ff:ff:ffinet 192.168.195.157/24 brd 192.168.195.255 scope global ens33 valid_lft forever preferred_lft foreverinet6 fe80::7e91:360f:4453:59e2/64 scope link valid_lft forever preferred_lft forever jdk安装 网上很多教程，我这里下载解压在/usr/local/jdk1.8.0_121 配置环境变量12345678910$ vi /etc/profile # 在末尾添加下面几行export JAVA_HOME=/usr/local/jdk1.8.0_121export PATH=$PATH:$JAVA_HOME/binexport CLASSPATH=.:$JAVA_HOME/lib$ source /etc/profile$ java -version #java版本测试java version \"1.8.0_121\"Java(TM) SE Runtime Environment (build 1.8.0_121-b13)Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)$ javac -version #javac版本测试 运行环境一般来说是不需要的 也就是说CLASSPATH 可以不用配置 环境准备 centos7 虚拟机或者真机，如果测试集群建议虚拟机 下载 下载elasticsearch地址https://www.elastic.co/downloads/elasticsearch,请下载rpm包，位数自己选择，我这里下载elasticsearch-5.2.2.rpm 下载kibana地址地址https://www.elastic.co/downloads/kibana,请下载rpm包，我这里下载kibana-5.2.2-x86_64.rpm 安装elasticsearch 1234567891011121314151617181920212223242526272829303132$ rpm -ivh elasticsearch-5.2.2.rpmPreparing... ################################# [100%]Creating elasticsearch group... OK #创建组Creating elasticsearch user... OK #创建用户Updating / installing...1:elasticsearch-0:5.2.2-1 ################################# [100%]### NOT starting on installation, please execute the following statements to configure elasticsearch service to start automatically using systemdsudo systemctl daemon-reloadsudo systemctl enable elasticsearch.service### You can start elasticsearch service by executingsudo systemctl start elasticsearch.service$ sudo systemctl daemon-reload # 重新加载服务 已经写进系统服务$ sudo systemctl enable elasticsearch.service # 执行开机自动启动Created symlink from /etc/systemd/system/multi-user.target.wants/elasticsearch.service to /usr/lib/systemd/system/elasticsearch.service.$ cat /usr/lib/systemd/system/elasticsearch.service # 查看安装路径 配置文件路径...[Service]Environment=ES_HOME=/usr/share/elasticsearchEnvironment=CONF_DIR=/etc/elasticsearch 配置文件路径Environment=DATA_DIR=/var/lib/elasticsearchEnvironment=LOG_DIR=/var/log/elasticsearchEnvironment=PID_DIR=/var/run/elasticsearchEnvironmentFile=-/etc/sysconfig/elasticsearch...$ cd /etc/elasticsearch$ vi elasticsearch.yml # 编辑配置文件，主要下面几项cluster.name: cesnode.name: cesnode-1http.port: 9200network.host: 192.168.195.157discovery.zen.ping.unicast.hosts: [\"192.168.195.158\", \"192.168.195.159\"] #后面集群 所需要的，这里先配置上# 详细信息请看官方文档 或者http://www.w2bc.com/article/198491 启动测试elasticsearch 1234567891011121314151617181920212223242526272829303132333435363738394041424344$ sudo systemctl start elasticsearch.service # 必须sudo执行 如不过是，后面无法检查错误$ systemctl status elasticsearch.service #查看状态 发现启动失败● elasticsearch.service - Elasticsearch Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; vendor preset: disabled) Active: failed (Result: exit-code) since Tue 2017-02-28 14:18:31 EST; 2s ago Docs: http://www.elastic.co Process: 4366 ExecStart=/usr/share/elasticsearch/bin/elasticsearch -p $&#123;PID_DIR&#125;/elasticsearch.pid --quiet -Edefault.path.logs=$&#123;LOG_DIR&#125; -Edefault.path.data=$&#123;DATA_DIR&#125; -Edefault.path.conf=$&#123;CONF_DIR&#125; (code=exited, status=1/FAILURE) Process: 4364 ExecStartPre=/usr/share/elasticsearch/bin/elasticsearch-systemd-pre-exec (code=exited, status=0/SUCCESS) Main PID: 4366 (code=exited, status=1/FAILURE)Feb 28 14:18:31 localhost.localdomain systemd[1]: Starting Elasticsearch...Feb 28 14:18:31 localhost.localdomain systemd[1]: Started Elasticsearch.Feb 28 14:18:31 localhost.localdomain elasticsearch[4366]: which: no java in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin) # 错误在这里Feb 28 14:18:31 localhost.localdomain systemd[1]: elasticsearch.service: main process exited, code=exited, status=1/FAILUREFeb 28 14:18:31 localhost.localdomain systemd[1]: Unit elasticsearch.service entered failed state.Feb 28 14:18:31 localhost.localdomain systemd[1]: elasticsearch.service failed.$ ln -s /usr/local/jdk1.8.0_121/bin/java /usr/bin/java#java明明安装了是吧发现还是找不到，只能到/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin，所以只能通过软连接启动了，看这个网址http://stackoverflow.com/questions/33439107/java-not-in-path-although-java-home-set$ sudo systemctl start elasticsearch.service $ systemctl status elasticsearch.service # 如果还有其他错误 请查看日志 /var/log/elasticsearch目录下的日志● elasticsearch.service - Elasticsearch Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; vendor preset: disabled) Active: active (running) since Tue 2017-02-28 14:35:21 EST; 2min 12s ago Docs: http://www.elastic.co Process: 4566 ExecStartPre=/usr/share/elasticsearch/bin/elasticsearch-systemd-pre-exec (code=exited, status=0/SUCCESS) Main PID: 4568 (java) CGroup: /system.slice/elasticsearch.service └─4568 /bin/java -Xms2g -Xmx2g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -server -Xss1m -Djava.awt.headles...Feb 28 14:35:21 localhost.localdomain systemd[1]: Starting Elasticsearch...Feb 28 14:35:21 localhost.localdomain systemd[1]: Started Elasticsearch.$ curl http://192.168.195.157:9200 # 测试运行状态 ss -nlp 查看端口占用&#123; \"name\" : \"cesnode-1\", # 对应node.name \"cluster_name\" : \"ces\", # 对应cluster.name \"cluster_uuid\" : \"qAKtrMKxTa6M8RRrlBmOnQ\", \"version\" : &#123; \"number\" : \"5.2.2\", \"build_hash\" : \"f9d9b74\", \"build_date\" : \"2017-02-24T17:26:45.835Z\", \"build_snapshot\" : false, \"lucene_version\" : \"6.4.1\" &#125;, \"tagline\" : \"You Know, for Search\"&#125; 错误2 1234567891011121314151617181920212223242526● elasticsearch.service - Elasticsearch Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; vendor preset: disabled) Active: failed (Result: exit-code) since Sat 2017-04-01 06:40:59 EDT; 460ms ago Docs: http://www.elastic.co Process: 2956 ExecStart=/usr/share/elasticsearch/bin/elasticsearch -p $&#123;PID_DIR&#125;/elasticsearch.pid --quiet -Edefault.path.logs=$&#123;LOG_DIR&#125; -Edefault.path.data=$&#123;DATA_DIR&#125; -Edefault.path.conf=$&#123;CONF_DIR&#125; (code=exited, status=1/FAILURE) Process: 2954 ExecStartPre=/usr/share/elasticsearch/bin/elasticsearch-systemd-pre-exec (code=exited, status=0/SUCCESS) Main PID: 2956 (code=exited, status=1/FAILURE)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:112)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.cli.SettingCommand.execute(SettingCommand.java:54)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:122)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.cli.Command.main(Command.java:88)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:89)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:82)Apr 01 06:40:59 localhost.localdomain elasticsearch[2956]: Refer to the log for complete error details.Apr 01 06:40:59 localhost.localdomain systemd[1]: elasticsearch.service: main process exited, code=exited, status=1/FAILUREApr 01 06:40:59 localhost.localdomain systemd[1]: Unit elasticsearch.service entered failed state.Apr 01 06:40:59 localhost.localdomain systemd[1]: elasticsearch.service failed.$ vi /etc/sysctl.conf # 编辑 添加下面vm.max_map_count=262144 $ sysctl -pvm.max_map_count=262144$ vi /etc/security/limits.conf # 编辑添加下面seven hard nofile 65536seven soft nofile 65536$ 安装kibana 1234567891011121314151617181920212223242526$ rpm -ivh kibana-5.2.2-x86_64.rpm$ systemctl status kibana● kibana.service - Kibana Loaded: loaded (/etc/systemd/system/kibana.service; disabled; vendor preset: disabled) Active: inactive (dead)$ cat /etc/systemd/system/kibana.service...[Service]Type=simpleUser=kibanaGroup=kibana# Load env vars from /etc/default/ and /etc/sysconfig/ if they exist.# Prefixing the path with '-' makes it try to load, but if the file doesn't# exist, it continues onward.EnvironmentFile=-/etc/default/kibanaEnvironmentFile=-/etc/sysconfig/kibanaExecStart=/usr/share/kibana/bin/kibana \"-c /etc/kibana/kibana.yml\"Restart=alwaysWorkingDirectory=/...$ vi /etc/kibana/kibana.yml...server.host: \"0.0.0.0\"elasticsearch.url: \"http://192.168.195.157:9200\"elasticsearch.ssl.verify: false... 启动测试kibana 1234567891011121314151617181920$ sudo systemctl start kibana.service$ systemctl status kibana.service● kibana.service - Kibana Loaded: loaded (/etc/systemd/system/kibana.service; enabled; vendor preset: disabled) Active: active (running) since Tue 2017-03-21 03:45:08 EDT; 44min ago Main PID: 642 (node) CGroup: /system.slice/kibana.service └─642 /usr/share/kibana/bin/../node/bin/node --no-warnings /usr/share/kibana/bin/../src/cli -c /etc/kibana/kibana.ymlMar 21 04:23:10 localhost.localdomain kibana[642]: &#123;\"type\":\"response\",\"@timestamp\":\"2017-03-21T08:23:10Z\",\"tags\":[],\"pid\":642,\"method\":\"get\",\"statusCode\":304,\"req\":&#123;\"url\":\"/bundles/bb6a9253b04b3be39968...dows NT 10.0;$ curl http://192.168.195.157:5601&lt;script&gt;var hashRoute = '/app/kibana';var defaultRoute = '/app/kibana';var hash = window.location.hash;if (hash.length) &#123; window.location = hashRoute + hash;&#125; else &#123; window.location = defaultRoute;&#125;&lt;/script&gt; 设置通过防火墙，外部访问 centos7采用firewall-cmd命令 如果没有防火墙请忽略这步 12$ firewall-cmd --zone=public --add-port=&#123;5601/tcp,9200/tcp,9300/tcp&#125; --permanent$ firewall-cmd --reload 浏览器分别输入 http://192.168.195.157:9200 http://192.168.195.157:5601 效果图后续奉上","raw":null,"content":null,"categories":[{"name":"教程","slug":"教程","permalink":"https://smirkcat.github.io/categories/教程/"},{"name":"初级","slug":"教程/初级","permalink":"https://smirkcat.github.io/categories/教程/初级/"}],"tags":[{"name":"elasticsearch","slug":"elasticsearch","permalink":"https://smirkcat.github.io/tags/elasticsearch/"},{"name":"教程","slug":"教程","permalink":"https://smirkcat.github.io/tags/教程/"}]},{"title":"第一篇博客，hexo的安装","slug":"hello-world","date":"2017-03-17T11:46:18.000Z","updated":"2017-03-20T07:58:34.000Z","comments":true,"path":"2017/03/17/hello-world/","link":"","permalink":"https://smirkcat.github.io/2017/03/17/hello-world/","excerpt":"","text":"经过可能估计接近一天的时间选型入门，我采用hexo框架和next主题，原先准备采用jekyll的，发现有个hexo框架是基于node.js的，前者是需要红宝石语言的，我发现没有这基础，而且也从观上更偏向这个。hexo默认自带主题是landscape，然后又在主题上花了一把时间，本来最终选定yilia，因为百度出来很多这个教程，然后在纠结这个文章阅读数pv uv vv怎么弄，以及大家用的多说发表评论，发现并没有集成。然后在搜索这个相关方案，就突然发现next，也有官方网站，集成更好，所以马上转投他的怀抱，就是为了写文章，不想过多折腾，所以下面教程开始。 安装nodejs 安装 git node官网下载地址https://nodejs.org/en/download/ git官网下载地址https://git-scm.com/downloads 注 这里我是在windows用户下进行的 软件安装细节就不在叙述了。一般默认安装即可，最多换下安装路径，安装node时一定选这安装npm，默认勾选了的。安装git时，一般也是默认安装，git是通过msys集成的 windows 下打开cmd 在搜索框输入cmd 或者你要打开的目录上的地址栏输入cmd，也可以用poweshell 提示更智能 node版本验证12$ node -vv6.10.0 npm 版本12$ npm -v3.10.10 git版本12$ git --versiongit version 2.11.0.windows.1 如果有上面提示表示安装成功，如果没有显示，一般是环境变量的问题，具体问题，具体解决。 安装hexo以及主题next hexo官网https://hexo.io/zh-cn/ next主题官网教程http://theme-next.iissnan.com/getting-started.html#select-scheme 1.安装hexo12$ npm install hexo-cli -g # 安装hexo命令行客户端，会自动安装 hexo$ npm install hexo-util -g # 安装 hexo-util next主题需要用到 2.验证hexo123456789101112$ hexo -vhexo-cli: 1.0.2os: Windows_NT 10.0.14393 win32 x64http_parser: 2.7.0node: 6.10.0v8: 5.1.281.93uv: 1.9.1zlib: 1.2.8ares: 1.10.1-DEVicu: 58.2modules: 48openssl: 1.0.2k 3.博客的创建123456$ cd ~/myblog # ~表示当前目录 你可以根据自己喜欢创建目录 ，然后cmd要定位到这个目录。$ hexo init # 初始化，会清空整个目录 慎重使用$ npm install 安装所需要的依赖$ hexo server # 可以简化为hexo s 有下面信息这表示启动ok INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 然后地址栏输入http://localhost:4000/ 即可看到一个初始化页面 4.主题的应用1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 一个是根目录下的hexo的_config.yml文件，一个是根目录/themes/next 主题文件的_config.yml文件，请注意区分这种以yml结尾的配置文件，是yaml格式的配置文件格式，相应的有toml,json,xml,ini等 修改hexo的_config.yml文件 site部分下 language: zh-Hans 其他选项请自己更改 Extensions部分下 theme: next 表示使用themes下的next主题 修改next主题文件的_config.yml文件 Schemes部分请设置为scheme: Pisces 默认为scheme: Muse 不太好看，第三个好看 其余教程请移步 http://theme-next.iissnan.com/getting-started.html 然后 Ctrl+C 关闭先前的，然后重新运行 hexo s然后刷新页面 就能看见新主题页面这里我的","raw":null,"content":null,"categories":[{"name":"教程","slug":"教程","permalink":"https://smirkcat.github.io/categories/教程/"},{"name":"初级","slug":"教程/初级","permalink":"https://smirkcat.github.io/categories/教程/初级/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://smirkcat.github.io/tags/教程/"},{"name":"hexo","slug":"hexo","permalink":"https://smirkcat.github.io/tags/hexo/"}]}]}